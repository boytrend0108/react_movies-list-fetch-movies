{"version":3,"sources":["components/MovieCard/MovieCard.tsx","State/State.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","services/movie.ts","constants/movieConstants.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","initialState","moviesList","localStorageData","localStorage","getItem","removeItem","JSON","parse","err","getLocalStorage","reducer","state","action","type","_objectSpread","concat","_toConsumableArray","payload","StateConstext","React","createContext","DispatchContext","GlobalProvider","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","Provider","value","MoviesList","movies","useContext","setItem","stringify","map","imdbId","FindMovie","_useState","useState","_useState2","query","setQuery","_useState3","_useState4","loading","setLoading","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","setMovie","handleOnSubmit","event","preventDefault","length","fetch","then","res","json","catch","Response","Error","getMovie","trim","movieFromApi","receivedMovie","Title","Plot","Poster","imdbID","prepareMovieData","finally","_Fragment","onSubmit","htmlFor","id","placeholder","cn","onChange","target","disabled","onClick","some","checkMovie","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e650eb99.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useReducer } from 'react';\nimport { Movie } from '../types/Movie';\n\ntype State = {\n  moviesList: Movie[],\n};\n\ntype Action\n  = { type: 'addToList', payload: Movie }\n  | { type: 'getListFromLocalStorage', payload: Movie[] };\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nfunction getLocalStorage(): Movie[] {\n  const localStorageData = localStorage.getItem('movies');\n\n  if (!localStorageData) {\n    localStorage.removeItem('movies');\n\n    return [];\n  }\n\n  try {\n    const movies = JSON.parse(localStorageData);\n\n    return movies;\n  } catch (err) {\n    localStorage.removeItem('movies');\n\n    return [];\n  }\n}\n\nexport const initialState: State = {\n  moviesList: getLocalStorage(),\n};\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'addToList':\n      return {\n        ...state,\n        moviesList: [...state.moviesList, action.payload],\n      };\n\n    case 'getListFromLocalStorage':\n      return {\n        ...state,\n        moviesList: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const StateConstext = React.createContext(initialState);\nexport const DispatchContext\n  = React.createContext((() => { }) as React.Dispatch<Action>);\n\nexport const GlobalProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateConstext.Provider value={state}>\n        {children}\n      </StateConstext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { StateConstext } from '../../State/State';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  const { moviesList } = useContext(StateConstext);\n\n  localStorage.setItem('movies', JSON.stringify(moviesList));\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, {\n  ChangeEvent,\n  useContext,\n  useState,\n} from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { DispatchContext, StateConstext } from '../../State/State';\nimport { checkMovie, prepareMovieData } from '../../services/movie';\nimport { getMovie } from '../../api';\nimport { MOVIE_NOT_FOUND_ERROR } from '../../constants/movieConstants';\n\nexport const FindMovie: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const { moviesList } = useContext(StateConstext);\n  const dispatch = useContext(DispatchContext);\n\n  function handleOnSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    if (!query.length) {\n      return;\n    }\n\n    setLoading(true);\n\n    getMovie(query.trim())\n      .then(movieFromApi => {\n        if (movieFromApi.Response === 'False') {\n          setErrorMessage(MOVIE_NOT_FOUND_ERROR);\n\n          return;\n        }\n\n        const receivedMovie = prepareMovieData(movieFromApi);\n\n        setMovie(receivedMovie);\n        setQuery('');\n      })\n      .catch(err => setErrorMessage(err))\n      .finally(() => setLoading(false));\n  }\n\n  function handleOnChange(event: ChangeEvent<HTMLInputElement>) {\n    setQuery(event.target.value);\n    setErrorMessage('');\n  }\n\n  function addToList() {\n    setLoading(true);\n    if (!movie) {\n      return;\n    }\n\n    if (!checkMovie(movie.imdbId, moviesList)) {\n      dispatch({ type: 'addToList', payload: movie });\n    }\n\n    setLoading(false);\n    setMovie(null);\n  }\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => handleOnSubmit(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': errorMessage,\n              })}\n              value={query}\n              onChange={handleOnChange}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!query.length}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`button ${loading ? 'is-loading' : 'is-light'}`}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                onClick={addToList}\n                className=\"button is-primary\"\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=f7c94fc6';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { DEFOULT_POSTER } from '../constants/movieConstants';\nimport { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\n\nexport function checkMovie(id: string, moviesList: Movie[]) {\n  return moviesList.some((movie: Movie) => movie.imdbId === id);\n}\n\nexport function prepareMovieData(movieFromApi: MovieData) {\n  const movie: Movie = {\n    title: movieFromApi.Title,\n    description: movieFromApi.Plot,\n    imgUrl:\n      movieFromApi.Poster === 'N/A'\n        ? DEFOULT_POSTER\n        : movieFromApi.Poster,\n    imdbUrl: `https://www.imdb.com/title/${movieFromApi.imdbID}`,\n    imdbId: movieFromApi.imdbID,\n  };\n\n  return movie;\n}\n","export const DEFOULT_POSTER\n  = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const MOVIE_NOT_FOUND_ERROR = 'Can\\'t find a movie with such a title';\n","import { useContext } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { StateConstext } from './State/State';\n\nexport const App = () => {\n  const { moviesList } = useContext(StateConstext);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\nimport { GlobalProvider } from './State/State';\n\nReactDOM.render(\n  <GlobalProvider>\n    <App />\n  </GlobalProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}